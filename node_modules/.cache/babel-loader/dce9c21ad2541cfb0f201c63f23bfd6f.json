{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhu\\\\OneDrive\\\\Desktop\\\\ODU Internship\\\\Oauth\\\\auth0-react\\\\src\\\\auth0-provider-with-history.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState, useEffect } from \"react\";\n\nconst Auth0ProviderWithHistory = ({\n  children\n}) => {\n  const {\n    user\n  } = useAuth0(); // let email=user.email;\n\n  let [checked, setChecked] = useState([]);\n  fetch(\"http://localhost:8080/api/v1/btn/subhusubhash24@gmail.com\", {\n    //getting button value from database\n    method: \"GET\"\n  }).then(res => res.json()).then(data => {\n    // if (data==true) {              \n    //   checked=true; \n    // }\n    // else\n    // {\n    //   checked=false;\n    // }\n    setChecked(data);\n  });\n  let redirect;\n  useEffect(() => {\n    redirect = checked ? 'http://localhost:3000/otpview' : 'http://localhost:3000';\n  }, []);\n  console.log(checked);\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n  console.log(redirect);\n\n  const onRedirectCallback = appState => {\n    history.push((appState === null || appState === void 0 ? void 0 : appState.returnTo) || window.location.pathname);\n  };\n\n  return /*#__PURE__*/React.createElement(Auth0Provider, {\n    domain: domain,\n    clientId: clientId // redirectUri={`http://localhost:3000/otpview`}\n    ,\n    redirectUri: redirect,\n    onRedirectCallback: onRedirectCallback,\n    audience: audience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, children);\n};\n\nexport default Auth0ProviderWithHistory;","map":{"version":3,"sources":["C:/Users/subhu/OneDrive/Desktop/ODU Internship/Oauth/auth0-react/src/auth0-provider-with-history.js"],"names":["React","useHistory","Auth0Provider","useAuth0","useState","useEffect","Auth0ProviderWithHistory","children","user","checked","setChecked","fetch","method","then","res","json","data","redirect","console","log","history","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","audience","REACT_APP_AUTH0_AUDIENCE","onRedirectCallback","appState","push","returnTo","window","location","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAAQC,aAAR,QAA6B,oBAA7B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;AAEA,MAAMC,wBAAwB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAC7C,QAAM;AAAEC,IAAAA;AAAF,MAAWL,QAAQ,EAAzB,CAD6C,CAE/C;;AACF,MAAI,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,EAAD,CAApC;AAEAO,EAAAA,KAAK,CAAC,2DAAD,EAA6D;AAAG;AACnEC,IAAAA,MAAM,EAAC;AADyD,GAA7D,CAAL,CAEKC,IAFL,CAEWC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFnB,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACAN,IAAAA,UAAU,CAACM,IAAD,CAAV;AACD,GAZH;AAaE,MAAIC,QAAJ;AACAZ,EAAAA,SAAS,CAAC,MAAM;AACbY,IAAAA,QAAQ,GAAER,OAAO,GAAG,+BAAH,GAAqC,uBAAtD;AACJ,GAFU,EAER,EAFQ,CAAT;AAGES,EAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;AACA,QAAMW,OAAO,GAAGnB,UAAU,EAA1B;AACA,QAAMoB,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA3B;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,yBAA7B;AACA,QAAMC,QAAQ,GAAGL,OAAO,CAACC,GAAR,CAAYK,wBAA7B;AACAV,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;;AACA,QAAMY,kBAAkB,GAAIC,QAAD,IAAc;AACrCV,IAAAA,OAAO,CAACW,IAAR,CAAa,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,QAAV,KAAsBC,MAAM,CAACC,QAAP,CAAgBC,QAAnD;AACH,GAFD;;AAIA,sBACI,oBAAC,aAAD;AACI,IAAA,MAAM,EAAId,MADd;AAEI,IAAA,QAAQ,EAAII,QAFhB,CAGI;AAHJ;AAII,IAAA,WAAW,EAAER,QAJjB;AAKI,IAAA,kBAAkB,EAAIY,kBAL1B;AAMI,IAAA,QAAQ,EAAEF,QANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQKpB,QARL,CADJ;AAYH,CA5CD;;AA8CA,eAAeD,wBAAf","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {Auth0Provider } from '@auth0/auth0-react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useState,useEffect } from \"react\";\r\n\r\nconst Auth0ProviderWithHistory = ({children}) => {\r\n    const { user } = useAuth0();\r\n  // let email=user.email;\r\nlet [checked, setChecked] = useState([]);\r\n\r\nfetch(\"http://localhost:8080/api/v1/btn/subhusubhash24@gmail.com\",{  //getting button value from database\r\n  method:\"GET\",\r\n  }).then((res) => res.json()) \r\n  .then(data => {\r\n    // if (data==true) {              \r\n    //   checked=true; \r\n    // }\r\n    // else\r\n    // {\r\n    //   checked=false;\r\n    // }\r\n    setChecked(data);\r\n  })\r\n  let redirect;\r\n  useEffect(() => {\r\n     redirect= checked ? 'http://localhost:3000/otpview' : 'http://localhost:3000';\r\n}, []);\r\n    console.log(checked);\r\n    const history = useHistory();\r\n    const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n    const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n    const audience = process.env.REACT_APP_AUTH0_AUDIENCE;    \r\n    console.log(redirect);\r\n    const onRedirectCallback = (appState) => {\r\n        history.push(appState?.returnTo || window.location.pathname);\r\n    };\r\n\r\n    return(\r\n        <Auth0Provider\r\n            domain = {domain}\r\n            clientId = {clientId}\r\n            // redirectUri={`http://localhost:3000/otpview`}\r\n            redirectUri={redirect}\r\n            onRedirectCallback = {onRedirectCallback}\r\n            audience={audience}\r\n        >\r\n            {children}\r\n        </Auth0Provider>    \r\n    );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;"]},"metadata":{},"sourceType":"module"}