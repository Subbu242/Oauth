{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\subhu\\\\OneDrive\\\\Desktop\\\\ODU Internship\\\\Oauth\\\\auth0-react\\\\src\\\\auth0-provider-with-history.js\";\nimport React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport { useState, useEffect } from \"react\";\n\nconst Auth0ProviderWithHistory = ({\n  children\n}) => {\n  const {\n    user\n  } = useAuth0(); // let email=user.email;\n\n  const [checked, setChecked] = useState(true);\n  const [loading, setLoading] = useState(false);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/api/v1/btn/subhusubhash24@gmail.com\", {\n      //getting button value from database\n      method: \"GET\"\n    }).then(res => res.json()).then(data => {\n      setChecked(data);\n      setLoading(true);\n    });\n  }, []);\n  console.log(checked);\n  const history = useHistory();\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\n  let redirect = checked ? `http://localhost:3000/otpview` : `http://localhost:3000`;\n  console.log(redirect);\n\n  const onRedirectCallback = appState => {\n    history.push((appState === null || appState === void 0 ? void 0 : appState.returnTo) || window.location.pathname);\n  }; // if (loading return loading)\n\n\n  return loading && /*#__PURE__*/React.createElement(Auth0Provider, {\n    domain: domain,\n    clientId: clientId // redirectUri={`http://localhost:3000/otpview`}\n    ,\n    redirectUri: redirect,\n    onRedirectCallback: onRedirectCallback,\n    audience: audience,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, children);\n};\n\nexport default Auth0ProviderWithHistory;","map":{"version":3,"sources":["C:/Users/subhu/OneDrive/Desktop/ODU Internship/Oauth/auth0-react/src/auth0-provider-with-history.js"],"names":["React","useHistory","Auth0Provider","useAuth0","useState","useEffect","Auth0ProviderWithHistory","children","user","checked","setChecked","loading","setLoading","fetch","method","then","res","json","data","console","log","history","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientId","REACT_APP_AUTH0_CLIENT_ID","audience","REACT_APP_AUTH0_AUDIENCE","redirect","onRedirectCallback","appState","push","returnTo","window","location","pathname"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,aAAT,QAA8B,oBAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,wBAAwB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AACjD,QAAM;AAAEC,IAAAA;AAAF,MAAWL,QAAQ,EAAzB,CADiD,CAEjD;;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,KAAK,CAAC,2DAAD,EAA8D;AAAG;AACpEC,MAAAA,MAAM,EAAE;AADyD,KAA9D,CAAL,CAEGC,IAFH,CAESC,GAAD,IAASA,GAAG,CAACC,IAAJ,EAFjB,EAGGF,IAHH,CAGQG,IAAI,IAAI;AACZR,MAAAA,UAAU,CAACQ,IAAD,CAAV;AACAN,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD,KANH;AAOD,GARQ,EAQN,EARM,CAAT;AAUAO,EAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACA,QAAMY,OAAO,GAAGpB,UAAU,EAA1B;AACA,QAAMqB,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,sBAA3B;AACA,QAAMC,QAAQ,GAAGH,OAAO,CAACC,GAAR,CAAYG,yBAA7B;AACA,QAAMC,QAAQ,GAAGL,OAAO,CAACC,GAAR,CAAYK,wBAA7B;AACA,MAAIC,QAAQ,GAAGrB,OAAO,GAAI,+BAAJ,GAAsC,uBAA5D;AACAU,EAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;;AACA,QAAMC,kBAAkB,GAAIC,QAAD,IAAc;AACvCX,IAAAA,OAAO,CAACY,IAAR,CAAa,CAAAD,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEE,QAAV,KAAsBC,MAAM,CAACC,QAAP,CAAgBC,QAAnD;AACD,GAFD,CAtBiD,CA0BjD;;;AACA,SACC1B,OAAO,iBAAI,oBAAC,aAAD;AACR,IAAA,MAAM,EAAEW,MADA;AAER,IAAA,QAAQ,EAAEI,QAFF,CAGR;AAHQ;AAIR,IAAA,WAAW,EAAEI,QAJL;AAKR,IAAA,kBAAkB,EAAEC,kBALZ;AAMR,IAAA,QAAQ,EAAEH,QANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQPrB,QARO,CADZ;AAYD,CAvCD;;AAyCA,eAAeD,wBAAf","sourcesContent":["import React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Auth0Provider } from '@auth0/auth0-react';\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst Auth0ProviderWithHistory = ({ children }) => {\r\n  const { user } = useAuth0();\r\n  // let email=user.email;\r\n  const [checked, setChecked] = useState(true);\r\n  const [loading, setLoading] = useState(false);\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8080/api/v1/btn/subhusubhash24@gmail.com\", {  //getting button value from database\r\n      method: \"GET\",\r\n    }).then((res) => res.json())\r\n      .then(data => {\r\n        setChecked(data);\r\n        setLoading(true);\r\n      })\r\n  }, []);\r\n\r\n  console.log(checked);\r\n  const history = useHistory();\r\n  const domain = process.env.REACT_APP_AUTH0_DOMAIN;\r\n  const clientId = process.env.REACT_APP_AUTH0_CLIENT_ID;\r\n  const audience = process.env.REACT_APP_AUTH0_AUDIENCE;\r\n  let redirect = checked ? `http://localhost:3000/otpview` : `http://localhost:3000`;\r\n  console.log(redirect);\r\n  const onRedirectCallback = (appState) => {\r\n    history.push(appState?.returnTo || window.location.pathname);\r\n  };\r\n\r\n  // if (loading return loading)\r\n  return (\r\n   loading && <Auth0Provider\r\n      domain={domain}\r\n      clientId={clientId}\r\n      // redirectUri={`http://localhost:3000/otpview`}\r\n      redirectUri={redirect}\r\n      onRedirectCallback={onRedirectCallback}\r\n      audience={audience}\r\n    >\r\n      {children}\r\n    </Auth0Provider>\r\n  );\r\n};\r\n\r\nexport default Auth0ProviderWithHistory;"]},"metadata":{},"sourceType":"module"}